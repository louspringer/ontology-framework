@prefix : <./guidance#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix meta: <./meta#> .
@prefix modules: <./guidance/modules#> .
@prefix core: <./guidance/modules/core#> .
@prefix model: <./guidance/modules/model#> .
@prefix security: <./guidance/modules/security#> .
@prefix validation: <./guidance/modules/validation#> .
@prefix collaboration: <./guidance/modules/collaboration#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

# Proxy Ontology Definition
:GuidanceOntology rdf:type owl:Ontology ;
    rdfs:label "Guidance Ontology" ;
    rdfs:comment "Main guidance ontology that imports and coordinates all guidance modules" ;
    dc:title "Guidance Ontology" ;
    dc:version "2.0.0" ;
    owl:versionInfo "2.0.0" ;
    dct:created "2024-03-21"^^xsd:dateTime ;
    dct:modified "2024-03-21"^^xsd:dateTime ;
    dct:publisher "Ontology Framework Project" ;
    dct:description "Modular guidance system for ontology development and management" ;
    owl:imports <./guidance/modules/core.ttl> ;
    owl:imports <./guidance/modules/model.ttl> ;
    owl:imports <./guidance/modules/security.ttl> ;
    owl:imports <./guidance/modules/validation.ttl> ;
    owl:imports <./guidance/modules/collaboration.ttl> .

# Module Registry
:ModuleRegistry rdf:type owl:Class ;
    rdfs:label "Module Registry" ;
    rdfs:comment "Registry of all guidance modules" ;
    owl:versionInfo "1.0.0" ;
    rdfs:isDefinedBy :GuidanceOntology ;
    rdfs:seeAlso <./guidance/modules/core.ttl> .

:registeredModule rdf:type owl:ObjectProperty ;
    rdfs:label "Registered Module" ;
    rdfs:comment "Links the registry to registered modules" ;
    rdfs:domain :ModuleRegistry ;
    rdfs:range owl:Ontology ;
    owl:versionInfo "1.0.0" .

:moduleVersion rdf:type owl:DatatypeProperty ;
    rdfs:label "Module Version" ;
    rdfs:comment "Version of a registered module" ;
    rdfs:domain owl:Ontology ;
    rdfs:range xsd:string ;
    owl:versionInfo "1.0.0" .

:moduleDescription rdf:type owl:DatatypeProperty ;
    rdfs:label "Module Description" ;
    rdfs:comment "Description of a registered module" ;
    rdfs:domain owl:Ontology ;
    rdfs:range xsd:string ;
    owl:versionInfo "1.0.0" .

# Module Registry Instance
:guidanceModuleRegistry rdf:type owl:NamedIndividual, :ModuleRegistry ;
    rdfs:label "Guidance Module Registry" ;
    rdfs:comment "Registry of all guidance modules" ;
    :registeredModule core:CoreGuidanceModule ;
    :registeredModule model:ModelGuidanceModule ;
    :registeredModule security:SecurityGuidanceModule ;
    :registeredModule validation:ValidationGuidanceModule ;
    :registeredModule collaboration:CollaborationGuidanceModule .

# Legacy Support
:LegacySupport rdf:type owl:Class ;
    rdfs:label "Legacy Support" ;
    rdfs:comment "Support for legacy guidance concepts" ;
    owl:versionInfo "1.0.0" ;
    rdfs:isDefinedBy :GuidanceOntology ;
    rdfs:seeAlso <./guidance/modules/core.ttl> .

:hasLegacyMapping rdf:type owl:ObjectProperty ;
    rdfs:label "Has Legacy Mapping" ;
    rdfs:comment "Maps legacy concepts to their modular equivalents" ;
    rdfs:domain :LegacySupport ;
    rdfs:range owl:Thing ;
    owl:versionInfo "1.0.0" .

:legacyGuidanceSupport rdf:type owl:NamedIndividual, :LegacySupport ;
    rdfs:label "Legacy Guidance Support" ;
    rdfs:comment "Maintains backward compatibility with legacy guidance" ;
    :hasLegacyMapping core:CoreGuidanceModule ;
    :hasLegacyMapping model:ModelGuidanceModule ;
    :hasLegacyMapping security:SecurityGuidanceModule ;
    :hasLegacyMapping validation:ValidationGuidanceModule ;
    :hasLegacyMapping collaboration:CollaborationGuidanceModule .

# SHACL Shapes
:ModuleRegistryShape a sh:NodeShape ;
    sh:targetClass :ModuleRegistry ;
    sh:property [
        sh:path :registeredModule ;
        sh:class owl:Ontology ;
        sh:minCount 1 ;
        sh:message "Module registry must have at least one registered module" ;
    ] .

:ModuleShape a sh:NodeShape ;
    sh:targetClass owl:Ontology ;
    sh:property [
        sh:path :moduleVersion ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:pattern "^\\d+\\.\\d+\\.\\d+$" ;
        sh:message "Module must have exactly one version in semantic versioning format" ;
    ] ,
    [
        sh:path :moduleDescription ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "Module must have a description" ;
    ] .

:LegacySupportShape a sh:NodeShape ;
    sh:targetClass :LegacySupport ;
    sh:property [
        sh:path :hasLegacyMapping ;
        sh:class owl:Thing ;
        sh:minCount 1 ;
        sh:message "Legacy support must have at least one mapping" ;
    ] .
