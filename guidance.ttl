@prefix : <https://raw.githubusercontent.com/louspringer/ontology-framework/main/guidance#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

rdf:type rdfs:label "22-rdf-syntax-ns#type" ;
    rdfs:comment "Description of 22-rdf-syntax-ns#type" ;
    rdfs:domain owl:Thing ;
    rdfs:range owl:Thing ;
    owl:versionInfo "1.0.0" .

rdfs:subClassOf rdfs:label "rdf-schema#subClassOf" ;
    rdfs:comment "Description of rdf-schema#subClassOf" ;
    rdfs:domain owl:Thing ;
    rdfs:range owl:Thing ;
    owl:versionInfo "1.0.0" .

: a owl:Ontology ;
    rdfs:label "Guidance Ontology"@en ;
    rdfs:comment "Ontology for managing guidance and validation rules"@en ;
    owl:versionInfo "1.0.0" .

# Validation Rule Types
:ValidationRuleType a owl:Class ;
    rdfs:label "Validation Rule Type"@en ;
    rdfs:comment "Types of validation rules supported by the framework"@en .

:SHACL a :ValidationRuleType ;
    rdfs:label "SHACL Validation"@en ;
    rdfs:comment "SHACL-based validation rules"@en .

:SEMANTIC a :ValidationRuleType ;
    rdfs:label "Semantic Validation"@en ;
    rdfs:comment "Semantic validation rules using SPARQL"@en .

:SYNTAX a :ValidationRuleType ;
    rdfs:label "Syntax Validation"@en ;
    rdfs:comment "Syntax validation rules"@en .

:STRUCTURAL a :ValidationRuleType ;
    rdfs:label "Structural Validation"@en ;
    rdfs:comment "Structural validation rules"@en .

# Validation Targets
:ValidationTarget a owl:Class ;
    rdfs:label "Validation Target"@en ;
    rdfs:comment "Targets for validation rules"@en .

:ConsistencyValidation a :ValidationTarget ;
    rdfs:label "Consistency Validation"@en ;
    rdfs:comment "Target for consistency validation"@en .

:SPOREValidation a :ValidationTarget ;
    rdfs:label "SPORE Validation"@en ;
    rdfs:comment "Target for SPORE validation"@en .

:SemanticValidation a :ValidationTarget ;
    rdfs:label "Semantic Validation"@en ;
    rdfs:comment "Target for semantic validation"@en .

:SyntaxValidation a :ValidationTarget ;
    rdfs:label "Syntax Validation"@en ;
    rdfs:comment "Target for syntax validation"@en .

# Validation Rules
:ValidationRule a owl:Class ;
    rdfs:label "Validation Rule"@en ;
    rdfs:comment "Base class for validation rules"@en .

:ConsistencyRule a :ValidationRule ;
    rdfs:label "Consistency Rule"@en ;
    rdfs:comment "Rule for consistency validation"@en .

:SPORERule a :ValidationRule ;
    rdfs:label "SPORE Rule"@en ;
    rdfs:comment "Rule for SPORE validation"@en .

:SemanticRule a :ValidationRule ;
    rdfs:label "Semantic Rule"@en ;
    rdfs:comment "Rule for semantic validation"@en .

:SyntaxRule a :ValidationRule ;
    rdfs:label "Syntax Rule"@en ;
    rdfs:comment "Rule for syntax validation"@en .

# Properties
:hasMessage a owl:DatatypeProperty ;
    rdfs:domain :ValidationRule ;
    rdfs:range xsd:string ;
    rdfs:label "has message"@en ;
    rdfs:comment "Specifies the validation message"@en .

:hasPriority a owl:DatatypeProperty ;
    rdfs:domain :ValidationRule ;
    rdfs:range xsd:string ;
    rdfs:label "has priority"@en ;
    rdfs:comment "Specifies the validation priority"@en .

:hasTarget a owl:ObjectProperty ;
    rdfs:domain :ValidationRule ;
    rdfs:range :ValidationTarget ;
    rdfs:label "has target"@en ;
    rdfs:comment "Specifies the validation target"@en .

:hasValidator a owl:DatatypeProperty ;
    rdfs:domain :ValidationRule ;
    rdfs:range xsd:string ;
    rdfs:label "has validator"@en ;
    rdfs:comment "Specifies the validator function"@en .

:hasRuleType a owl:ObjectProperty ;
    rdfs:domain :ValidationRule ;
    rdfs:range :ValidationRuleType ;
    rdfs:label "has rule type"@en ;
    rdfs:comment "Specifies the type of validation rule"@en .

# SHACL Shapes
:ValidationRuleShape a sh:NodeShape ;
    sh:targetClass :ValidationRule ;
    sh:property [
        sh:path :hasMessage ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Validation rule must have a message"
    ] ;
    sh:property [
        sh:path :hasTarget ;
        sh:class :ValidationTarget ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Validation rule must have a target"
    ] ;
    sh:property [
        sh:path :hasPriority ;
        sh:datatype xsd:string ;
        sh:in ("HIGH" "MEDIUM" "LOW") ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Priority must be HIGH, MEDIUM, or LOW"
    ] ;
    sh:property [
        sh:path :hasValidator ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Validation rule must have a validator"
    ] ;
    sh:property [
        sh:path :hasRuleType ;
        sh:class :ValidationRuleType ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Validation rule must have a rule type"
    ] .

:ValidationTargetShape a sh:NodeShape ;
    sh:targetClass :ValidationTarget ;
    sh:property [
        sh:path rdfs:label ;
        sh:datatype xsd:string ;
        sh:languageIn ("en") ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Validation target must have an English label"
    ] ;
    sh:property [
        sh:path rdfs:comment ;
        sh:datatype xsd:string ;
        sh:languageIn ("en") ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Validation target must have an English comment"
    ] .

# Sensitive Data Validation
:SensitiveDataValidation a owl:Class ;
    rdfs:subClassOf :ValidationRule ;
    rdfs:label "Sensitive Data Validation"@en ;
    rdfs:comment "Rules for detecting sensitive data patterns"@en .

:hasPattern a owl:DatatypeProperty ;
    rdfs:domain :ValidationRule ;
    rdfs:range xsd:string ;
    rdfs:label "has pattern"@en ;
    rdfs:comment "Specifies a validation pattern"@en .

:SensitiveDataRule a :ValidationRule ;
    rdfs:label "Sensitive Data Detection"@en ;
    rdfs:comment "Rule for detecting sensitive data patterns"@en ;
    :hasRuleType :SENSITIVE_DATA ;
    :hasPriority "HIGH" ;
    :hasPattern "\\b\\d{3}-\\d{2}-\\d{4}\\b" ;  # SSN pattern
    :hasPattern "\\b\\d{4}-\\d{4}-\\d{4}-\\d{4}\\b" ;  # Credit card pattern
    :hasPattern "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b" ;  # Email pattern
    :hasMessage "Sensitive data detected in literal value" .

