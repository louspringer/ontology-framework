# Ontology: meta:MetaOntology
# Implements: meta:OntologyFramework
# Requirement: REQ-ONT-001 Core ontology framework
# Guidance: guidance:OntologyPatterns#CoreOntology
# Description: Core meta-ontology defining base concepts and relationships

@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix meta: <./meta#> .
@prefix metameta: <./metameta#> .
@prefix problem: <./problem#> .
@prefix solution: <./solution#> .
@prefix conversation: <./conversation#> .
@prefix guidance: <./guidance#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

# Ontology metadata
meta:MetaOntology a owl:Ontology ;
    rdfs:label "Meta Ontology" ;
    rdfs:comment "Core ontology for meta-level concepts and patterns" ;
    owl:versionInfo "0.1.0" .

# Security Concepts
meta:SecurityConcept a owl:Class ;
    rdfs:label "Security Concept"@en ;
    rdfs:comment "Core security concepts and controls" ;
    owl:versionInfo "1.0.0" .

meta:AuthenticationConcept a owl:Class ;
    rdfs:label "Authentication Concept"@en ;
    rdfs:comment "Authentication-related security concepts" ;
    rdfs:subClassOf meta:SecurityConcept ;
    owl:versionInfo "1.0.0" .

meta:AccessControlConcept a owl:Class ;
    rdfs:label "Access Control Concept"@en ;
    rdfs:comment "Access control and authorization concepts" ;
    rdfs:subClassOf meta:SecurityConcept ;
    owl:versionInfo "1.0.0" .

meta:EncryptionConcept a owl:Class ;
    rdfs:label "Encryption Concept"@en ;
    rdfs:comment "Data encryption and protection concepts" ;
    rdfs:subClassOf meta:SecurityConcept ;
    owl:versionInfo "1.0.0" .

meta:ComplianceConcept a owl:Class ;
    rdfs:label "Compliance Concept"@en ;
    rdfs:comment "Regulatory compliance and audit concepts" ;
    rdfs:subClassOf meta:SecurityConcept ;
    owl:versionInfo "1.0.0" .

# Component Classes
meta:Component a owl:Class ;
    rdfs:label "Component"@en ;
    rdfs:comment "System component or module" ;
    owl:versionInfo "1.0.0" .

meta:Configuration a owl:Class ;
    rdfs:label "Configuration"@en ;
    rdfs:comment "Configuration component" ;
    rdfs:subClassOf meta:Component ;
    owl:versionInfo "1.0.0" .

meta:SecretStore a owl:Class ;
    rdfs:label "Secret Store"@en ;
    rdfs:comment "Secure storage for secrets and keys" ;
    rdfs:subClassOf meta:Component ;
    owl:versionInfo "1.0.0" .

meta:AuditLog a owl:Class ;
    rdfs:label "Audit Log"@en ;
    rdfs:comment "Audit logging component" ;
    rdfs:subClassOf meta:Component ;
    owl:versionInfo "1.0.0" .

# Properties
meta:implements a owl:ObjectProperty ;
    rdfs:domain meta:Component ;
    rdfs:range meta:SecurityConcept ;
    rdfs:comment "Indicates which security concept a component implements" ;
    owl:versionInfo "1.0.0" .

meta:requires a owl:ObjectProperty ;
    rdfs:domain meta:Component ;
    rdfs:range meta:SecurityConcept ;
    rdfs:comment "Indicates which security concept a component requires" ;
    owl:versionInfo "1.0.0" .

meta:dependsOn a owl:ObjectProperty ;
    rdfs:domain meta:Component ;
    rdfs:range meta:Component ;
    rdfs:comment "Indicates component dependencies" ;
    owl:versionInfo "1.0.0" .

# Security Requirements
meta:keyRotationRequirement a meta:SecurityConcept ;
    rdfs:label "Key Rotation Requirement"@en ;
    rdfs:comment "Regular key rotation for security" ;
    meta:requires meta:AuthenticationConcept .

meta:auditRequirement a meta:ComplianceConcept ;
    rdfs:label "Audit Requirement"@en ;
    rdfs:comment "Comprehensive audit logging" ;
    meta:requires meta:AuditLog .

meta:encryptionRequirement a meta:EncryptionConcept ;
    rdfs:label "Encryption Requirement"@en ;
    rdfs:comment "Data encryption at rest and in transit" ;
    meta:requires meta:SecretStore .

# Classes
meta:Secret a owl:Class ;
    rdfs:label "Secret" ;
    rdfs:comment "A piece of sensitive information that needs to be securely stored" .

meta:Environment a owl:Class ;
    rdfs:label "Environment" ;
    rdfs:comment "A deployment context (dev, staging, prod) with specific configuration needs" .

meta:Reference a owl:Class ;
    rdfs:label "Reference" ;
    rdfs:comment "A pointer to a secret or configuration value stored in a secret store" .

# Pattern Framework
meta:Pattern a owl:Class ;
    rdfs:label "Pattern" ;
    rdfs:comment "Base class for all patterns" .

meta:PatternDimension a owl:Class ;
    rdfs:subClassOf metameta:AbstractionDimension ;
    rdfs:label "Pattern Dimension" ;
    rdfs:comment "A dimension along which patterns can be organized" .

meta:PatternInstance a owl:Class ;
    rdfs:label "Pattern Instance" ;
    rdfs:comment "A specific instance or implementation of a pattern" .

# Pattern Properties
meta:implementsPattern a owl:ObjectProperty ;
    rdfs:label "implements pattern" ;
    rdfs:domain meta:PatternInstance ;
    rdfs:range meta:Pattern ;
    rdfs:comment "Links a specific implementation to its base pattern" .

meta:hasPatternDimension a owl:ObjectProperty ;
    rdfs:label "has pattern dimension" ;
    rdfs:domain meta:Pattern ;
    rdfs:range meta:PatternDimension ;
    rdfs:comment "Links a pattern to its organizational dimensions" .

meta:relatesTo a owl:ObjectProperty ;
    rdfs:label "relates to" ;
    rdfs:domain meta:Pattern ;
    rdfs:range meta:Pattern ;
    rdfs:comment "Indicates a relationship between patterns" .

# Pattern Dimensions
meta:SecurityDimension a meta:PatternDimension ;
    rdfs:label "Security Dimension" ;
    rdfs:comment "Organizes patterns by security aspects" .

meta:PlatformDimension a meta:PatternDimension ;
    rdfs:label "Platform Dimension" ;
    rdfs:comment "Organizes patterns by platform specifics" .

meta:DataDimension a meta:PatternDimension ;
    rdfs:label "Data Dimension" ;
    rdfs:comment "Organizes patterns by data handling aspects" .

# SHACL Validation
meta:PatternShape a sh:NodeShape ;
    sh:targetClass meta:Pattern ;
    sh:property [
        sh:path meta:hasPatternDimension ;
        sh:minCount 1 ;
        sh:message "Every pattern must have at least one dimension."
    ] .

# Properties
meta:hasSecret a owl:ObjectProperty ;
    rdfs:domain meta:SecretStore ;
    rdfs:range meta:Secret ;
    rdfs:label "has secret" ;
    rdfs:comment "Links a secret store to the secrets it contains" .

meta:hasReference a owl:ObjectProperty ;
    rdfs:domain meta:Configuration ;
    rdfs:range meta:Reference ;
    rdfs:label "has reference" ;
    rdfs:comment "Links a configuration to its secret references" .

meta:referencesSecret a owl:ObjectProperty ;
    rdfs:domain meta:Reference ;
    rdfs:range meta:Secret ;
    rdfs:label "references secret" ;
    rdfs:comment "Links a reference to the secret it points to" .

meta:belongsToEnvironment a owl:ObjectProperty ;
    rdfs:domain meta:Configuration ;
    rdfs:range meta:Environment ;
    rdfs:label "belongs to environment" ;
    rdfs:comment "Links a configuration to its environment" .

# Individuals
meta:OnePassword a meta:SecretStore ;
    rdfs:label "1Password" ;
    rdfs:comment "1Password vault system for secure secret storage" .

meta:AzureBotConfig a meta:Configuration ;
    rdfs:label "Azure Bot Configuration" ;
    rdfs:comment "Configuration for the Azure Teams Bot application" ;
    meta:belongsToEnvironment meta:DevEnvironment .

meta:DevEnvironment a meta:Environment ;
    rdfs:label "Development Environment" ;
    rdfs:comment "Development environment configuration" .

meta:StagingEnvironment a meta:Environment ;
    rdfs:label "Staging Environment" ;
    rdfs:comment "Staging environment configuration" .

meta:ProductionEnvironment a meta:Environment ;
    rdfs:label "Production Environment" ;
    rdfs:comment "Production environment configuration" .

# Task Management
meta:Task rdf:type owl:Class ;
    rdfs:label "Task" ;
    rdfs:comment "A unit of work to be completed" ;
    rdfs:subClassOf metameta:AbstractionDimension .

meta:TaskStatus rdf:type owl:Class ;
    rdfs:label "Task Status" ;
    rdfs:comment "The status of a task" .

meta:TaskPriority rdf:type owl:Class ;
    rdfs:label "Task Priority" ;
    rdfs:comment "The priority level of a task" .

# Task Properties
meta:hasStatus rdf:type owl:ObjectProperty ;
    rdfs:label "has status" ;
    rdfs:domain meta:Task ;
    rdfs:range meta:TaskStatus ;
    rdfs:comment "Links a task to its current status" .

meta:hasPriority rdf:type owl:DatatypeProperty ;
    rdfs:label "has priority" ;
    rdfs:domain meta:Task ;
    rdfs:range xsd:integer ;
    rdfs:comment "Priority level of the task (1-5)" .

meta:hasRequirement rdf:type owl:ObjectProperty ;
    rdfs:label "has requirement" ;
    rdfs:domain meta:Task ;
    rdfs:range meta:Requirement ;
    rdfs:comment "Links a task to its requirements" .

meta:hasValidation rdf:type owl:ObjectProperty ;
    rdfs:label "has validation" ;
    rdfs:domain meta:Task ;
    rdfs:range meta:ValidationCriteria ;
    rdfs:comment "Links a task to its validation criteria" .

# Status Instances
meta:Pending rdf:type meta:TaskStatus ;
    rdfs:label "Pending" ;
    rdfs:comment "Task has not been started" .

meta:InProgress rdf:type meta:TaskStatus ;
    rdfs:label "In Progress" ;
    rdfs:comment "Task is currently being worked on" .

meta:Completed rdf:type meta:TaskStatus ;
    rdfs:label "Completed" ;
    rdfs:comment "Task has been completed" .

meta:Blocked rdf:type meta:TaskStatus ;
    rdfs:label "Blocked" ;
    rdfs:comment "Task is blocked by dependencies or issues" .

# SHACL Validation
meta:TaskShape a sh:NodeShape ;
    sh:targetClass meta:Task ;
    sh:property [
        sh:path meta:hasStatus ;
        sh:class meta:TaskStatus ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Task must have exactly one status" ;
    ] ,
    [
        sh:path meta:hasPriority ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:minInclusive 1 ;
        sh:maxInclusive 5 ;
        sh:message "Task must have a priority between 1 and 5" ;
    ] .

# Add SHACL shapes
meta:SecurityConceptShape a sh:NodeShape ;
    sh:targetClass meta:SecurityConcept ;
    sh:property [
        sh:path rdfs:label ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:message "Security concept must have a label" ;
    ] .

meta:ComponentShape a sh:NodeShape ;
    sh:targetClass meta:Component ;
    sh:property [
        sh:path meta:implements ;
        sh:class meta:SecurityConcept ;
        sh:message "Component must implement at least one security concept" ;
    ] ,
    [
        sh:path meta:requires ;
        sh:class meta:SecurityConcept ;
        sh:message "Component must specify required security concepts" ;
    ] .

meta:SecretStoreShape a sh:NodeShape ;
    sh:targetClass meta:SecretStore ;
    sh:property [
        sh:path meta:hasSecret ;
        sh:class meta:Secret ;
        sh:message "Secret store must contain at least one secret" ;
    ] .

meta:ConfigurationShape a sh:NodeShape ;
    sh:targetClass meta:Configuration ;
    sh:property [
        sh:path meta:belongsToEnvironment ;
        sh:class meta:Environment ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Configuration must belong to exactly one environment" ;
    ] .

# Oracle RDF Storage
meta:OracleRDFStorage a owl:Class ;
    rdfs:label "Oracle RDF Storage"@en ;
    rdfs:comment "Oracle database RDF storage configuration and management" ;
    owl:versionInfo "1.0.0" .

meta:RDFNetwork a owl:Class ;
    rdfs:label "RDF Network"@en ;
    rdfs:comment "Schema-private semantic network in Oracle" ;
    rdfs:subClassOf meta:OracleRDFStorage ;
    owl:versionInfo "1.0.0" .

meta:RDFGraph a owl:Class ;
    rdfs:label "RDF Graph"@en ;
    rdfs:comment "Named graph within an Oracle RDF network" ;
    rdfs:subClassOf meta:OracleRDFStorage ;
    owl:versionInfo "1.0.0" .

meta:StagingTable a owl:Class ;
    rdfs:label "Staging Table"@en ;
    rdfs:comment "Temporary table for bulk loading RDF data" ;
    rdfs:subClassOf meta:OracleRDFStorage ;
    owl:versionInfo "1.0.0" .

# Oracle RDF Properties
meta:hasNetwork a owl:ObjectProperty ;
    rdfs:domain meta:RDFGraph ;
    rdfs:range meta:RDFNetwork ;
    rdfs:label "has network" ;
    rdfs:comment "Links a graph to its semantic network" .

meta:hasTablespace a owl:DatatypeProperty ;
    rdfs:domain meta:RDFNetwork ;
    rdfs:range xsd:string ;
    rdfs:label "has tablespace" ;
    rdfs:comment "Specifies the tablespace for RDF storage" .

meta:hasOwner a owl:DatatypeProperty ;
    rdfs:domain meta:OracleRDFStorage ;
    rdfs:range xsd:string ;
    rdfs:label "has owner" ;
    rdfs:comment "Specifies the owner of the RDF storage object" .

meta:hasName a owl:DatatypeProperty ;
    rdfs:domain meta:OracleRDFStorage ;
    rdfs:range xsd:string ;
    rdfs:label "has name" ;
    rdfs:comment "Specifies the name of the RDF storage object" .

# Root Cause Analysis
meta:RCAIssue a owl:Class ;
    rdfs:label "RCA Issue"@en ;
    rdfs:comment "Issue identified during root cause analysis" ;
    owl:versionInfo "1.0.0" .

meta:RCASolution a owl:Class ;
    rdfs:label "RCA Solution"@en ;
    rdfs:comment "Solution identified during root cause analysis" ;
    owl:versionInfo "1.0.0" .

meta:hasSolution a owl:ObjectProperty ;
    rdfs:domain meta:RCAIssue ;
    rdfs:range meta:RCASolution ;
    rdfs:label "has solution" ;
    rdfs:comment "Links an issue to its solution" .

# RCA Instances for Oracle RDF Loading
meta:URITransformationIssue a meta:RCAIssue ;
    rdfs:label "URI Transformation Issue" ;
    rdfs:comment "Issue with transforming file-based and relative URIs to web-based URIs" ;
    meta:hasSolution meta:URITransformationSolution .

meta:URITransformationSolution a meta:RCASolution ;
    rdfs:label "URI Transformation Solution" ;
    rdfs:comment """Implemented transform_uri function to convert:
    1. File-based URIs to http://louspringer.com/ontology-framework/
    2. Relative URIs (./) to http://louspringer.com/ontology-framework/
    Applied transformation to all URIs (subject, predicate, object) before loading""" .

meta:BulkLoadParameterIssue a meta:RCAIssue ;
    rdfs:label "Bulk Load Parameter Issue" ;
    rdfs:comment "Issues with SEM_APIS.BULK_LOAD_FROM_STAGING_TABLE parameters" ;
    meta:hasSolution meta:BulkLoadParameterSolution .

meta:BulkLoadParameterSolution a meta:RCASolution ;
    rdfs:label "Bulk Load Parameter Solution" ;
    rdfs:comment """Fixed parameter order and format:
    1. Changed from named to positional parameters
    2. Added all required parameters in correct order
    3. Set PARSE flag for N-Triple parsing
    4. Included network_owner and network_name parameters""" .

meta:GraphNamingIssue a meta:RCAIssue ;
    rdfs:label "Graph Naming Issue" ;
    rdfs:comment "Issues with invalid SQL names in graph identifiers" ;
    meta:hasSolution meta:GraphNamingSolution .

meta:GraphNamingSolution a meta:RCASolution ;
    rdfs:label "Graph Naming Solution" ;
    rdfs:comment """Resolved graph naming issues:
    1. Removed ADMIN. prefix from graph names
    2. Used simple uppercase file stem for graph names
    3. Avoided dots and special characters in names""" .

# Test Framework
meta:TestCase a owl:Class ;
    rdfs:label "Test Case"@en ;
    rdfs:comment "Test case for validating RDF operations" ;
    owl:versionInfo "1.0.0" .

meta:TestQuery a owl:Class ;
    rdfs:label "Test Query"@en ;
    rdfs:comment "SPARQL query for testing" ;
    rdfs:subClassOf meta:TestCase ;
    owl:versionInfo "1.0.0" .

meta:TestOperation a owl:Class ;
    rdfs:label "Test Operation"@en ;
    rdfs:comment "CRUD operation for testing" ;
    rdfs:subClassOf meta:TestCase ;
    owl:versionInfo "1.0.0" .

meta:ExpectedResult a owl:Class ;
    rdfs:label "Expected Result"@en ;
    rdfs:comment "Expected result of a test case" ;
    owl:versionInfo "1.0.0" .

# Test Properties
meta:hasQuery a owl:DatatypeProperty ;
    rdfs:domain meta:TestQuery ;
    rdfs:range xsd:string ;
    rdfs:label "has query" ;
    rdfs:comment "SPARQL query text" .

meta:hasExpectedResult a owl:ObjectProperty ;
    rdfs:domain meta:TestCase ;
    rdfs:range meta:ExpectedResult ;
    rdfs:label "has expected result" ;
    rdfs:comment "Links a test case to its expected result" .

meta:hasOperation a owl:DatatypeProperty ;
    rdfs:domain meta:TestOperation ;
    rdfs:range xsd:string ;
    rdfs:label "has operation" ;
    rdfs:comment "CRUD operation text" .

# Test Instances - Basic Queries
meta:ListSecurityConceptsTest a meta:TestQuery ;
    rdfs:label "List Security Concepts Test" ;
    rdfs:comment "Query to list all security concepts" ;
    meta:hasQuery """
        PREFIX meta: <./meta#>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        
        SELECT ?concept ?label
        WHERE {
            ?concept a meta:SecurityConcept ;
                    rdfs:label ?label .
        }
        ORDER BY ?label
    """ ;
    meta:hasExpectedResult meta:SecurityConceptsResult .

meta:SecurityConceptsResult a meta:ExpectedResult ;
    rdfs:comment """Expected results include:
        - Authentication Concept
        - Access Control Concept
        - Encryption Concept
        - Compliance Concept""" .

meta:RCAIssuesTest a meta:TestQuery ;
    rdfs:label "RCA Issues and Solutions Test" ;
    rdfs:comment "Query to match RCA issues with their solutions" ;
    meta:hasQuery """
        PREFIX meta: <./meta#>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        
        SELECT ?issue ?issueName ?solution ?solutionDesc
        WHERE {
            ?issue a meta:RCAIssue ;
                   rdfs:label ?issueName ;
                   meta:hasSolution ?solution .
            ?solution rdfs:comment ?solutionDesc .
        }
        ORDER BY ?issueName
    """ ;
    meta:hasExpectedResult meta:RCAIssuesResult .

meta:RCAIssuesResult a meta:ExpectedResult ;
    rdfs:comment """Expected results include:
        - Bulk Load Parameter Issue with solution
        - Graph Naming Issue with solution
        - URI Transformation Issue with solution""" .

# Test Instances - CRUD Operations
meta:CreateNewConceptTest a meta:TestOperation ;
    rdfs:label "Create New Concept Test" ;
    rdfs:comment "Test creating a new security concept" ;
    meta:hasOperation """
        PREFIX meta: <./meta#>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        PREFIX owl: <http://www.w3.org/2002/07/owl#>
        
        INSERT DATA {
            meta:TestSecurityConcept a meta:SecurityConcept ;
                rdfs:label "Test Security Concept"@en ;
                rdfs:comment "Test concept for CRUD operations" ;
                owl:versionInfo "1.0.0" .
        }
    """ .

meta:UpdateConceptTest a meta:TestOperation ;
    rdfs:label "Update Concept Test" ;
    rdfs:comment "Test updating a security concept" ;
    meta:hasOperation """
        PREFIX meta: <./meta#>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        
        DELETE {
            meta:TestSecurityConcept rdfs:comment ?oldComment
        }
        INSERT {
            meta:TestSecurityConcept rdfs:comment "Updated test concept description"
        }
        WHERE {
            meta:TestSecurityConcept rdfs:comment ?oldComment
        }
    """ .

meta:DeleteConceptTest a meta:TestOperation ;
    rdfs:label "Delete Concept Test" ;
    rdfs:comment "Test deleting a security concept" ;
    meta:hasOperation """
        PREFIX meta: <./meta#>
        
        DELETE WHERE {
            meta:TestSecurityConcept ?p ?o
        }
    """ .

# Test Instances - Complex Queries
meta:ComponentDependencyTest a meta:TestQuery ;
    rdfs:label "Component Dependency Test" ;
    rdfs:comment "Query to analyze component dependencies" ;
    meta:hasQuery """
        PREFIX meta: <./meta#>
        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
        
        SELECT ?component ?dependsOn ?implements
        WHERE {
            ?component a meta:Component ;
                      rdfs:label ?name .
            OPTIONAL { ?component meta:dependsOn ?dependsOn }
            OPTIONAL { ?component meta:implements ?implements }
        }
        ORDER BY ?component
    """ ;
    meta:hasExpectedResult meta:ComponentDependencyResult .

meta:ComponentDependencyResult a meta:ExpectedResult ;
    rdfs:comment """Expected results include component relationships:
        - SecretStore dependencies
        - AuditLog implementations
        - Configuration dependencies""" .

# SHACL Validation for Tests
meta:TestQueryShape a sh:NodeShape ;
    sh:targetClass meta:TestQuery ;
    sh:property [
        sh:path meta:hasQuery ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:message "Test query must have a SPARQL query string"
    ] ,
    [
        sh:path meta:hasExpectedResult ;
        sh:class meta:ExpectedResult ;
        sh:minCount 1 ;
        sh:message "Test query must have expected results"
    ] .

meta:TestOperationShape a sh:NodeShape ;
    sh:targetClass meta:TestOperation ;
    sh:property [
        sh:path meta:hasOperation ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:message "Test operation must have a CRUD operation string"
    ] .

# TODO: Areas for Expansion
# - Add validation rules for secret references
# - Add deployment-specific configuration patterns
# - Add backup and restore concepts
# - Add audit trail concepts 