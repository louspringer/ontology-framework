[pytest]
# Test environment configuration as per guidance.ttl
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution settings
timeout = 300
addopts = 
    --tb=short
    -v
    --strict-markers
    --asyncio-mode=auto
    --cov=src
    --cov-report=term-missing
    --cov-report=html

# Required markers
markers =
    asyncio: mark test as async/await (pytest-asyncio)
    model_structure: mark test as validating model structure requirements
    shacl_validation: mark test as validating SHACL patterns
    functional: mark test as validating functional requirements
    integration: mark test as an integration test
    parallel: mark test to run in parallel

# Coverage settings
cov_fail_under = 80

# Type checking
mypy =
    src/
    tests/
    --ignore-missing-imports
    --disallow-untyped-defs
    --disallow-incomplete-defs
    --check-untyped-defs
    --warn-redundant-casts
    --warn-unused-ignores
    --warn-return-any
    --warn-unreachable

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning 