version: '3.8'

services:
  bfg9k-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./guidance.ttl:/app/guidance.ttl
      - ./data:/app/data
      - ./temp_embeddings:/app/temp_embeddings
    environment:
      - PYTHONPATH=/app/src
      - GRAPHDB_URL=http://graphdb:7200
      - MCP_PORT=8080
    depends_on:
      - graphdb
    command: conda run --no-capture-output -n ontology-framework python bfg9k_mcp_server.py

  graphdb:
    image: ontotext/graphdb:10.4.0
    ports:
      - "7200:7200"
    volumes:
      - graphdb-data:/opt/graphdb/home
    environment:
      - GDB_HEAP_SIZE=2g
      - GDB_MIN_MEM=1g
      - GDB_MAX_MEM=2g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7200/rest/repositories"]
      interval: 30s
      timeout: 10s
      retries: 3

  validation-service:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./guidance.ttl:/app/guidance.ttl
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app/src
      - GRAPHDB_URL=http://graphdb:7200
    depends_on:
      - graphdb
    command: conda run --no-capture-output -n ontology-framework python src/ontology_framework/tools/validate_guidance.py

  ontology-framework:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./src:/app/src
    environment:
      - PYTHONPATH=/app/src
      - CONDA_DEFAULT_ENV=ontology-framework
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "conda", "run", "-n", "ontology-framework", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    networks:
      - ontology-network

  plantuml-server:
    image: plantuml/plantuml-server:jetty
    ports:
      - "8080:8080"
    networks:
      - ontology-network

volumes:
  graphdb-data:
    driver: local
  graphdb-import:
    driver: local

networks:
  ontology-network:
    driver: bridge 